// Test parte individual: Andres Mora

import soporte.*
import campeon.*
import items.*

describe "Testing soporte" {

	const draven = new Campeon(puntosDeAtaque = 25, puntosDeVida = 150, dinero = 1000)
	const maokai  = new Campeon(puntosDeAtaque = 25, puntosDeVida = 150, dinero = 1000)
	const janna  = new Soporte(puntosDeAtaque = 25, puntosDeVida = 150, dinero = 100, campeonVinculado = draven)
	const oleada = new Oleada(minions = 100, plus = 0)
	const pocion = new PocionDeVida()
	const tomo   = new TomoAmplificador()

	test "Test del enunciado" {
		draven.atacar(oleada)
		janna.atacar(oleada)
		janna.campeonVinculado(maokai)
		maokai.atacar(oleada)
		janna.atacar(oleada)
		maokai.comprar(tomo)
		janna.comprar(pocion)
		assert.that(oleada.estaMuerto())
		assert.equals(90, draven.danioRecibido())
		assert.equals(40, maokai.danioRecibido())
		assert.equals(525, maokai.dinero())
		assert.equals(100, janna.dinero())
		assert.equals([ tomo, pocion ], janna.inventario())
	}
	
	test "El soporte quiere activar la habilidad de un item que pertenece al campeon" {
		draven.comprar(pocion)
		assert.throwsExceptionWithMessage("El personaje no posee este Ã­tem!", {janna.activarHabilidad(pocion)})
		assert.equals(0, pocion.usos())
		draven.activarHabilidad(pocion)
		assert.equals(1, pocion.usos())
	}
	
	test "El soporte compra un item: No se agrega al inventario del campeon vinculado" {
		janna.dinero(1000)
		janna.comprar(tomo)
		assert.notThat(draven.items().contains(tomo))
	}
}

